@using System.Data
@using NonFactors.Mvc.Grid
@model DataTable

@{
    ViewData["Title"] = "Dashboard - Analytics";
}
@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" />
}
@section VendorScripts {
    <script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
}
@section PageScripts {
    <script src="~/js/dashboards-analytics.js"></script>
}

@* ************** Content ************** *@

<div class="row" style="margin-top:30px">
    <div class="col-lg-6 mb-4 order-0 col-sm-12">
        <form action="@Url.Action("RedirectToReports","Home")" method="post" class="mb-0">
            <div class="card" style="cursor: pointer; height:150px; width:500px" onclick="this.closest('form').submit();">
                <img src="~/img/illustrations/man-with-laptop-light.png" height="140" alt="View Badge User" style="position: absolute; top: 10px; right: 10px;" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png">
                <div class="d-flex align-items-end row">

                    <div class="col-sm-12">
                       

                            <p class="mb-4" style="font-size: 18px; margin-top:30px; margin-left: 22px;color: #fff;">@ViewBag.SalesMessage</p>

                       
                       
                    </div>
                   
                </div>
            </div>
        </form>
    </div>
    <div class="col-lg-6 col-md-4 order-1 col-sm-12">
        <div class="row">
            <div class="col-lg-6 col-md-12 col-6 mb-4 col-sm-6">
                <form action="@Url.Action("RedirectToReports","Home")" method="post" class="mb-0">
                    <div class="card" style="cursor: pointer; height:150px; width:230px;" onclick="this.closest('form').submit();">

                        <div class="card-body">
                            <div class="card-title d-flex align-items-start justify-content-between">
                                <div class="avatar flex-shrink-0">
                                    <img src="~/img/icons/unicons/chart-success.png" alt="chart success" class="rounded">
                                </div>

                            </div>
                            <span class="fw-medium d-block mb-1" style="color: #fff;">Sales</span>
                            <h3 class="card-title mb-2" style="font-size: 16px;">₹@ViewBag.DailySales</h3>

                        </div>
                    </div>
                </form>
            </div>

            <div class="col-lg-6 col-md-12 col-6 mb-4 col-sm-6">
                <form action="@Url.Action("RedirectToReports","Home")" method="post" class="mb-0">
                    <div class="card" style="cursor: pointer; height:150px; width:230px" onclick="this.closest('form').submit();">
                        <div class="card-body">
                            <div class="card-title d-flex align-items-start justify-content-between">
                                <div class="avatar flex-shrink-0">
                                    <img src="~/img/icons/unicons/wallet-info.png" alt="Credit Card" class="rounded">
                                </div>

                            </div>
                            <span style="color: #fff;">Payment</span>
                            <h3 class="card-title mb-1" style="font-size: 16px;">₹@ViewBag.DailyPayments</h3>

                        </div>

                    </div>
                </form>
            </div>
        </div>

    </div>

</div>
<form action="@Url.Action("GetReports","Home")" method="post">


  

    @if (Model != null && Model.Rows.Count > 0)
    {



        <div class="row gy-4">
           
            <div class="col-md-12 col-lg-12">

                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h3 class="centered text-black" style="font-family:'Lucida Bright'; color: #fff;">@ViewBag.Reportname</h3>
                            <div class="filter-container">
                                <label for="filterDropdown" class="form-label text-black custom-label">Filter by Time Period</label>
                                <select id="filterDropdown" class="form-select">
                                    
                                    <option value="today">Today</option>
                                    <option value="week">This Week</option>
                                    <option value="three_months">Last Three Months</option>
                                </select>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table id="dataTable" class="table table-bordered" style="border: 0px solid #fff;">
                                <thead style="background-color: black; color: white;">
                                <tr>
                                    @foreach (DataColumn column in Model.Columns)
                                    {
                                        <th style="font-size: 18px; color:white;border: 1px solid #fff;">@column.ColumnName</th>
                                    }
                                </tr>
                            </thead>

                            <tbody class="card-body dividerblack">

                                @foreach (DataRow row in Model.Rows)
                                {

                                    <tr>

                                        @foreach (var cell in row.ItemArray)
                                        {
                                            <td style ="border: 1px solid #000000;">@cell</td>
                                        }

                                    </tr>

                                }

                            </tbody>
                        </table>
                            <div id="pagination" class="pagination-container" style="text-align: center; margin-top: 10px;">
                                <!-- Pagination links will be injected here by JavaScript -->
                            </div>

                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    const rowsPerPage = 10;
                                    let currentPage = 1;
                                    let filteredRows = [];

                                    const filterDropdown = document.getElementById('filterDropdown');
                                    const dataTable = document.getElementById('dataTable');
                                    const rows = dataTable.querySelectorAll('tbody tr');

                                    function filterTable(filterValue) {
                                        const today = new Date();
                                        let startDate;

                                        switch (filterValue) {
                                            case 'today':
                                                startDate = new Date(today.setHours(0, 0, 0, 0));
                                                break;
                                            case 'week':
                                                const firstDayOfWeek = today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1);
                                                startDate = new Date(today.setDate(firstDayOfWeek));
                                                startDate.setHours(0, 0, 0, 0); // Ensure hours are set to the start of the day
                                                break;
                                            case 'three_months':
                                                startDate = new Date(today.setMonth(today.getMonth() - 3));
                                                startDate.setHours(0, 0, 0, 0); // Ensure hours are set to the start of the day
                                                break;
                                            default:
                                                startDate = null;
                                                break;
                                        }

                                        filteredRows = [];
                                        rows.forEach(row => {
                                            const billDateText = row.querySelector('td:nth-child(2)').textContent.trim();
                                            const billDate = new Date(billDateText);

                                            if (!isNaN(billDate.getTime())) { // Ensure billDate is valid
                                                if (startDate) {
                                                    if (billDate >= startDate) {
                                                        row.style.display = '';
                                                        filteredRows.push(row);
                                                    } else {
                                                        row.style.display = 'none';
                                                    }
                                                } else {
                                                    row.style.display = '';
                                                    filteredRows.push(row);
                                                }
                                            } else {
                                                row.style.display = 'none'; // Handle invalid date formats
                                            }
                                        });

                                        // Reset to page 1 when filter changes
                                        currentPage = 1;
                                        displayTable(currentPage);
                                    }

                                    function displayTable(page) {
                                        const startIndex = (page - 1) * rowsPerPage;
                                        const endIndex = startIndex + rowsPerPage;

                                        // Hide all rows
                                        filteredRows.forEach((row, index) => {
                                            row.style.display = 'none';
                                        });

                                        // Show rows for the current page
                                        for (let i = startIndex; i < endIndex && i < filteredRows.length; i++) {
                                            filteredRows[i].style.display = '';
                                        }

                                        updatePagination(page);
                                    }

                                    function updatePagination(currentPage) {
                                        const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                                        const paginationContainer = document.getElementById("pagination");
                                        paginationContainer.innerHTML = "";

                                        // Create "Previous" button
                                        const prevButton = document.createElement("a");
                                        prevButton.href = "#";
                                        prevButton.innerText = "Previous";
                                        prevButton.onclick = function () {
                                            if (currentPage > 1) {
                                                displayTable(currentPage - 1);
                                            }
                                            return false;
                                        };
                                        prevButton.style.backgroundColor = "white";
                                        prevButton.style.color = "black";
                                        // Adjust padding as needed
                                        prevButton.style.textDecoration = "none"; // Remove underline
                                        prevButton.style.border = "1px solid black"; // Optional border
                                        prevButton.style.borderRadius = "5px";
                                        prevButton.style.fontSize = "18px"; // Adjust font size as needed
                                        if (currentPage === 1) {
                                            prevButton.style.visibility = "hidden";
                                        }
                                        paginationContainer.appendChild(prevButton);

                                        // Create page number links
                                        const pageNumbersContainer = document.createElement("span");
                                        pageNumbersContainer.style.margin = "0 10px";

                                        for (let i = 1; i <= pageCount; i++) {
                                            const pageLink = document.createElement("a");
                                            pageLink.href = "#";
                                            pageLink.innerText = i;
                                            pageLink.style.margin = "0 5px";
                                            pageLink.onclick = function () {
                                                displayTable(i);
                                                return false;
                                            };
                                            if (i === currentPage) {
                                                pageLink.style.fontWeight = "bold";
                                                pageLink.style.textDecoration = "underline";
                                            }
                                            pageNumbersContainer.appendChild(pageLink);
                                        }

                                        paginationContainer.appendChild(pageNumbersContainer);

                                        // Create "Next" button
                                        const nextButton = document.createElement("a");
                                        nextButton.href = "#";
                                        nextButton.innerText = "Next";
                                        nextButton.onclick = function () {
                                            if (currentPage < pageCount) {
                                                displayTable(currentPage + 1);
                                            }
                                            return false;
                                        };

                                        nextButton.style.backgroundColor = "white";
                                        nextButton.style.color = "black";
                                        // Adjust padding as needed
                                        nextButton.style.textDecoration = "none"; // Remove underline
                                        nextButton.style.border = "1px solid black"; // Optional border
                                        nextButton.style.borderRadius = "5px";
                                        nextButton.style.fontSize = "18px";

                                        if (currentPage === pageCount) {
                                            nextButton.style.visibility = "hidden";
                                        }
                                        paginationContainer.appendChild(nextButton);
                                    }

                                    // Initialize the filter to show only today's data
                                    filterDropdown.value = 'today';
                                    filterTable('today');

                                    filterDropdown.addEventListener('change', function () {
                                        filterTable(filterDropdown.value);
                                    });

                                    // Initial display
                                    displayTable(currentPage);
                                });
                            </script>

                           

                                </div>




                            </div>

                        <br />
                        <center>

                                @* <button class="btn" onclick="exportToExcel()" style="background-color: #fff; color: #000000; border: 1px solid #000000;" onmouseover="this.style.backgroundColor='#edebeb';"
                                        onmouseout="this.style.backgroundColor='#fff';">
                                    Export to Excel
                                </button> *@
                        </center>
                    </div>
                 
                </div>
            </div>
                                         
                                        


       


                      

        <script>
            function exportToExcel() {
                try {
                    // Select the table element
                    var table = document.getElementById('dataTable');

                    // Create a new Excel instance
                    var excel = new ExcelJS.Workbook();
                    var sheet = excel.addWorksheet('Sheet 1');

                    // Iterate over each row and column in the table to add data to Excel sheet
                    for (var i = 0; i < table.rows.length; i++) {
                        var row = sheet.addRow();
                        var cells = table.rows[i].cells;
                        for (var j = 0; j < cells.length; j++) {
                            row.getCell(j + 1).value = cells[j].innerText;
                        }
                    }

                    // Save the workbook as an Excel file
                    excel.xlsx.writeBuffer().then(function (buffer) {
                        saveAs(new Blob([buffer], { type: "application/octet-stream" }), 'table_data.xlsx');
                        window.location.href = '@Url.Action("Index", "Home")';
                    });
                } catch (error) {
                    console.error('Export to Excel failed:', error);
                    alert('Export to Excel failed. Please try again.' + error);
                }
            }
        </script>
        <!-- Include ExcelJS library -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.4.0/exceljs.min.js"></script>
        <!-- Include FileSaver.js library for saving Blob objects -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

    }


    <!-- ✅ Toast markup (Top-right) -->
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999">
        <div id="dashboardToast" class="toast bg-white border-0 shadow" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
            <div class="toast-header">
                <i class="mdi mdi-check-circle text-primary me-2"></i>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div id="dashboardToastBody" class="toast-body">
                Toast message goes here.
            </div>
        </div>
    </div>

    <!-- ✅ Toast show script -->
    <script>
        function showToast(message) {
            const toastEl = document.getElementById('dashboardToast');
            const toastBody = document.getElementById('dashboardToastBody');
            toastBody.textContent = message;
            const toast = new bootstrap.Toast(toastEl);
            toast.show();
        }
    </script>
</form>

@if (ViewData["ToastMessage"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            showToast("@ViewData["ToastMessage"]");
        });
    </script>
}






